0.8.42

 + Last update prior to hurricane Irma
 + Improved D3D9 texture injection performance


0.8.41
 
 + Improved support for D3D9 texture modding, and made it an opt-in thing since it's still
     experimental.
 + Added File | Exit to the control panel


0.8.40

 + Added somewhat functional texture modding support to D3D9
  >> Will finish at a later date
 + Added XInput Controller Slot Reassignment (refer to INI file -- default is 0,1,2,3)


0.8.39

 + Fixed D3D9Ex D3DPRESENT_DONOTWAIT support in Lightning Returns: FFXIII
 + Integrated UI memory management fixes for FFXIII
 + Improved thread-safety in D3D9 shader mod tools
 + Added scaling option to widgets (needs a ton of work)
 + Added clothing preferences to Gal*Gun: Double Peace


0.8.38

 + Integrates about 33 - 50% of Tales of Berseria Fix's shader modding functionality
 + Fixes SteamAPI problems in older games


0.8.37

 + Preliminary support for a native Steam Controller input backend
  >> Does not utilize any of the special features, merely blocks native SteamAPI input
       while the config UI is open
  >> Generally for the 1% of games that use native Steam, this requires Special K to be
       installed as a local wrapper because it needs to catch SteamAPI initialization early.


0.8.36

 + Performance-tuned memory pattern scanner to offer alignment and address above/below
     search heuristics.

   >> Significantly speeds up repeating pattern searches (i.e. hard-coded resolutions)
    
 + Added Resolution Override to Gal Gun and Akiba's Trip

  >> This is different from the way this feature normally works, it goes beyond API
       reflection/introspection and instead patches certain hardcoded arrays of memory
         in really crappy JRPG ports.

 + Added D3D11 Wireframe Mode (per-shader)
 + Added additional D3D11 Shader Culling options (per-Shader Resource View)
 + Added support for BC7 and BC6H textures to Final Fantasy X/X-2
 + Fixed Shader Resource View formats for injected D3D11 textures using alternate formats
 + Fixed Global Injection Blacklist issues
 + Turned off all widgets by default for new installs


0.8.35

 + Added option to flip textures in D3D11 Live Texture View
 + Added indicator for injected textures to D3D11 Live Texture View
 + Corrected texture hashes listed in D3D11 Live Texture View
 + ReShade can now be opened independently of Special K's config menu
 + Fixed ReShade draw order in OpenGL games


0.8.34.1

 + Fixed SteamAPI problem in Dark Souls III
 + Added Browse ReShade Assets to File Menu
 + Improved ReShade stats screen
 + Improved controller support in ReShade's UI
 + ReShade game presets are now stored in Profiles\<appname>\ReShade\<executable.ini>

0.8.34

 + Framerate limiter defaults to busy-wait again
  * The customization you do to the non-busy-wait method (under Advanced) are not saved
      when you exit a game.

 Added Support for Custom ReShade
 ================================
  + This release comes bundled with a test version of unofficial ReShade 3.0.666 ;)
  + The custom version goes in PlugIns/Unofficial, and you should place the official
      release (if you want/need it) into PlugIns/ThirdParty
  + Only the global injector version of Special K supports custom ReShade, you can
      select between official / custom under the PlugIns menu

   >> The custom version includes:
    * Gamepad / keyboard support on config menu
    * Per-game presets, textures and shaders
     + Place Textures in Documents/My Mods/SpecialK/Profiles/<App Name>/ReShade/Textures
     + Place Shaders in Documents/My Mods/SpecialK/Profiles/<App Name>/ReShade/Shaders
    * Always loads a game's preset on start, instead of the last used preset


0.8.33

 + Fixed low-resolution issues with the EULA window
 + Most analytical graphs are now multi-colored instead of trying to determine
     a single color to represent the quality of the entire dataset.
 + Added new options to the framerate limiter (disabled by default) to continue
     driving a game's window message pump if it renders from the same thread as it
       handles input.
  >> Should reduce input latency and help in games like FFX
  >> You must turn Busy-Wait limiting off in order to use this


0.8.32

  * Profile Name Collision Avoidance
 ====================================

 + Global Injector Profiles for Steam games use the application name as defined by the game's manifest
   >> Prior to this, they used <app_name.exe>, which was too generic.

 + This is a two-stage process that involves booting SteamAPI up to determine the AppID and then
     parsing the manifest.

   >> Translation and mapping data for each game is maintained in a new AppCache\... directory structure
   >> Profile migration occurs automatically, but for some games my overlay may not render correctly
        the first time you run a pre-migrated game.
   >> In some cases, deleting the original <app_name.exe> directory may even be necessary.

 + Later versions of Special K will allow blacklisting launchers and other components that share Steam AppIDs


0.8.31

 + Fixed Steam DRM issues in DOOMx64 and a couplf of other OpenGL games
 + Added a battery meter to the framepacing widget
 + Added an option to draw a border around widgets

 * Added support for gamepad manipulation of widgets
 ===================================================
  > Enter gamepad exclusive input mode, then hold Square (PlayStation) or X (Xbox)
      and select a widget by pressing the shoulder buttons.
  > Moving a widget can be done by holding Square / X and moving the left analog stick
  > Double-tapping the Cross (PlayStation) or A (Xbox) buttons will open widget config
 
 + Removed Alt+F4 input hack for Trails of Cold Steel; it is obsolete


0.8.30

 [.3]
  + Added D3D11 Graphics Pipeline Widget, it displays most of the important stats from the
      shader analytics feature (Ctrl + Shift + R) over a 5 to 10-second history.
  + Added D3D11 SwapChain Menu, I'll fill the stuff in with tooltips later.
   >> This mostly benefits Windows 10 users
  + Fixed Trails of Cold Steel Alt+F4 behavior so it no longer exits if you're trying to
      close a different program
  + Added 1 frame swapchain latency in Flip Mode to ensure G-Sync doesn't destroy timing :)
   >> Will make this an option and restore the original latency reducing measures for
        non-G-Sync users in a future update.

 [.2]
  + Added CPU Monitor as an official widget, with OSD config and all
  + Added grid rulers for docked widgets while moving them
  + Added option to disable resizing widgets
  + Added persistent storage of widget positions
  + Added user-defined min/max size constraints to widgets
  + Fixed keybind parsing problems with numpad and Left/Right Alt keys

 [.1]
  + Fixed D3D8 / DDraw Wrapping

 + Added persistent config to some of the widgets (Volume Control / GPU Stats / Framepacing)
  >> Right click those widgets to open a config menu for them
 + Fixed DDRAW / D3D8 wrapper problems
 + Corrected scaling on menus


0.8.29

 + The peak volume meter is now a histogram, assigned color based on channel
 + Peak volume moves left / right depending on channel
 + Added very early GPU hardware stat graphs to a new GPU widget
 + Mouse cursor and input behavior when interacting with widgets is more intuitive
  >> You can even move them around without the config menu open
 + Fixed Dark Souls 3 Texture Cache reference leaks
 + Disabled a few of the optimizations from 0.8.28 for compatibility with GeForce Experience
  >> Will investigate further in the future


0.8.28

 + Removed tooltips from graph data views
 + Fixed G-Sync status query in D3D9 games
 + Added minimum flush interval for log I/O (100 ms default)
 + Coalesced all INI file output into a single buffered write for improved
     disk I/O performance
 + Restored multi-threaded DLL analysis at startup (performance)


0.8.27

 + Added OSD Widgets (framepacing and CPU load)
  >> Will polish these off later, they're just toys for now.
 + Changed Special K's config menu to work similar to a Mac, for easier access
     to the branches sub-menu at lower resolutions
 + Fixed various Windows 7 issues


0.8.26

 + Added G-Sync status to framerate readout on OSD
 + Cleaned up log formatting, turn wordwrap off to appreciate the changes ;)
 + Various DLL Loader compliance issues have been fixed (in third-party software),
     including using incorrect paths, wrong flags, etc.
   >> I am likely to encounter broken software that relied on the original undefined
        behavior, I'll fix it when it causes problems :)
   >> This change actuall solves a few oddball problems in the meantime
 + Added mouse warp deadzone configuration to the control panel for games with obnoxious
     mouselook.
 + Fixed occasional Wbem Locator issues caused by the Steam Overlay
   >> The reason that CPU stats, etc. can take several seconds to load is because the Steam 
        overlay holds a thread sync lock on the service needed for those stats. The reason
          those stats sometimes crash games is ... because the Steam overlay holds a lock.
   >> Tsk, tsk, Steam - other people need those services too, damit :)


0.8.25:

 + Fixed mouse input in Mouse Effect: Andromeda, *AGAIN*.
 + Officially supports dinput8.dll injection; the compatibility menu does not offer this
     as one of its choices, but it will eventually.
  >> dinput8.dll, for games that use this, has the greatest chance of working with fullscreen
       video capture software.
 + Improved keyboard input processing, particularly how it behves while in Input Exclusive mode
     and you trigger the keybinding to toggle the config menu.
  >> This is preparing for customizable keybindings, I've been promising them for a long time :)
 + Fixed occasional right-to-left window orientation problems in 64-bit builds
 + Fixed D3D11 reference counting underflows in some games, especially when a third-party
     render enhancing mod is present.
 + Fixed rare texture cache hash collision problem for textures that are removed from the cache
     because a graphics engine has altered them.


0.8.24.4:

 + Fix deadlock caused by MSI Nahimic due to hotpatching 32-bit code
  >> Add MORE padding bytes than the x86 ABI requires because Nahimic is borked

0.8.24.3:

 + Fixed all known multi-threaded rendering problems (Dishonored2 can be debugged now).
 + Reduced texture cache overhead
 + Improved WMI monitoring performance

0.8.24.1 / 2:

 + Crash logs are now stored persistently in logs/crash/<date>/...
 + Updated SKIM64 to add more functionality to tray menu

0.8.24:

 + Added Window Border Style settings to Display menu
 + Corrected several Windows 7 issues
 + Improved DOSBox OpenGL support
 + Improved thread-safety in D3D11 shader mod tools; still can't safely debug Dishonored 2
 + Fixed input support in Final Fantasy 8


0.8.23:

 + Fixed potential startup deadlock with Steam Overlay and CoInitializeSecurity (...)
 + Fixed SK_NoFailMove behavior (prevents updates) when attempting to patch a locked file
 + Fixed (evict-on-update) D3D11 texture cache in The Witcher 3 and Divinity: Original Sin
 + Added logs/installer.log when installing through SKIM
 + Added module name and fixed newline endings in game_output.log


0.8.22:

 + [Misc]  Stopping injection while programs are using Special K no longer crashes them :)
 + [SKIM]  Closing SKIM while injection is enabled now triggers a confirmation dialog
 + [D3D11] Added option to enable staging texture cache (for Unity games)
 + [SKIM]  Added option to start SKIM automatically during install and to system tray
 + [SKIM]  Added list of (64-bit) programs currently injected and a confirmation if you
             attempt to stop injection while a program is using Special K.
 + [SKIM]  Added tooltip to system tray icon
 + [D3D11] Added support for changing fullscreen display scaling mode while your game is
             running; should make using centered scaling modes a bit more intuitive.
 + [Misc]  Added injection stats to Help menu, mouseover Global Injector version to see
             basic information about games recently played.


0.8.21:

 + [SKIM]   Changed system tray icon (to another KDE icon =P) so that it is easier to
              recognize
 + [XInput] Fix for games that use XInputGetStateEx (...) without allocating the correct
              memory size for the data structure (+1 DWORD)
 + [D3D11]  Reduced D3D11 API overhead in games that stream memory-mapped textures when
              texture caching is enabled but the render mod window is not open
 + [SKIM]   Using +Inject or -Inject commandline switches starts SKIM minimized to the
              tray; left-click the icon in the try to restore it
 + [SKIM]   Branch migration takes effect immediately in all software except for the
              global injector
 + [SKIM]   Only one instance of SKIM can run simultaneously, minimized instances will
              be restored if a new instance is launched
 + [SKIM]   The commandline switch -Inject will now kill any running injection instances
              and exit


0.8.20:

 + [D3D11] Added texture updae frequency (0 = Manually Refresh, 1+ = Auto) for the
             texture mod tools.
 + [D3D11] Added option to replace 24-bit Depth Buffer with 32-bit
 + [D3D11] Improved multi-threaded safety in the D3D11 mod tools for games that draw
             from multiple threads.
 + [SKIM]  Added support to minimize SKIM v 0.7.0+ to the System Tray and have it
             manage global injection for the end-user.
 + [D3D9]  Fixed swapchain recovery afer device loss
 + [GL]    Improved startup time


0.8.19:

 + [D3D11] Re-wrote stateblock code to minimize reference counting problems
 + [D3D11] Fixed stateblock leak that prevented ResizeBuffers (...) from working
 + Fixed late initialization problems if compat menu is dismissed by pressing OK
 + Added version to compatibility menu
 + Improved compatibility menu and update menu's input focus behavior


0.8.18:
 
 + Added version info to wrapper DLL installations; updating is not supported
 + Installing a wrapper DLL through the compat menu now copies the config from the
     global profile.
 + Uninstalling a wrapper DLL copies the local config back to the global profile
 + Fixed G-Sync indicator in D3D11


0.8.17:

 + Added Last-Known-RenderAPI to Special K's INI file to help with the auto-detect
     mechanism on the compatibility menu
 + Corrected scenario where having a local API wrapper version of Special K in-place
     and one of the API virtual files (i.e. SpecialK.d3d9) would cause both DLLs to
       load.
 + Temporarily re-enabled auto-update.


0.8.16:
 + Renamed Window/Fullscreen override options now that they work in multiple APIs
     (refer to Display.Output)
 + Added version info for all plug-ins to the help menu
 + Store user preferences for G-Sync and Input API persistently.
 + Extended screen mode option to include D3D11
 + Changed the D3D9 screen mode option to a combobox for mode and checkbox for
     permanent override.


0.8.15:

 + Injection Compatibility Options Menu DRASTICALLY Overhauled
 -------------------------------------------------------------
  * Can now be used for both local DLL wrappers and global injector
  * Can be activated with late global injection as a means of installing a
      local DLL.
   >> Activate global injection, hold Ctrl + Shift, activate your game, click
        Install and then deactivate global injection.
  * Added config file reset option
  * Added plug-in disable feature (ReShade)
  * Added D3D8/DDraw plug-in validation
  * Improved API auto-detection and validation of executable's DLL Import Table.

 + Added sleepless render / window thread options to framerate limiter to fix
     games like LEGO City Undercover, that trash their window's message pump.
 + Added Fullscreen override option to control panel for D3D9 games


0.8.14:

 + Add D3D11 Safe Fullscreen option for games that disable fullscreen mode
    (i.e. LEGO City Undercover, Final Fantasy X/X-2, anything on Windows Store)
    ==> Set SafeFullscreenMode in dxgi.ini / SpecialK.ini, then press Alt+Enter
 + Added option to install wrapper DLL through global injector's compat. menu
 + Fixed framerate statistics above ~333 FPS
 + Disabled DirectDraw and D3D8 in 64-bit builds
 + Disabled Vulkan and D3D12 in 32-bit builds
 + Added support for games that change render API without a full restart;
     OSD will not work, but the game will continue running ;)
 + Fixed WMI Performance Monitoring thread initialization
 + Added DirectDraw support (using dgVoodoo)
 + Fixed OpenGL vertex memory management in Sinless
 + Fixed achievement popups with partial progress (no longer treated as unlock)
 + Screenshot on achievement unlock fixed when popups are disabled
 + Added Texture LOD Selection to D3D11 Texture View
 + Added Texture Set Filtering to D3D11 Texture View
 + Added XInput vibration parameter validation
 + Fixed alt-tab in Fullscreen mode in EverQuest and Hunie Pop
 + Fixed double-input processing in God Eater 2: Rageburst
 + Fixed SteamAPI init. problems in Final Fantasy IX
 + Fixed typo (spe----) in EULA
 + Improved Gamepad Input in Audio Session Selector
 + Changed OSD to draw below ImGui control panel in D3D9
 + Fixed Achievement Popups in Senkran Kagura: Shinovi Versus
 + Fixed Overlay Rendering in Pillars of Eternity / Tyranny / Torment


0.8.13:

 + Removed Chinese Unicode code points from ImGui font; added Latin punctuation
 + Fixed NieR: Automata Texture Staging
 + Added Thread Local Storage Stack
 + Added play time tracking to non-Steam games
 + Fixed hour roll-over problems in play time stats
    >> Special K is Y2K38 ready! :) <<
 + d3dcompiler_*.dll is pinned at load-time to prevent TLS issues in software
     that loads and unloads this DLL when it compiles HLSL shaders.
 + Fixed 3DMigoto compatibility
     (ImGui changed to use hooked D3D11 functions instead of trampoline)
 + Added support for resolutions as low as 1280x720 and 1024x768
 + Added option to force-inject steam_api into games published before SteamWorks.
     (steam_api{64}.dll must be placed in Documents\My Mods\SpecialK\)
 + Added configuration for CEGUI initialization (safe vs. fast [default])
 + Enabled D3D11 Texture Cache by DEFAULT (for new mod tools to work)
 + Added Memory View (D3D11)
 + Added Texture View (D3D11)
 + Added RenderTarget View (D3D11)
 + Added Shader Disassembly View (D3D11)
 + Added option to disable DebugBreak (...) in kernel32.dll
 + Added fix for incorrectly packed compressed DDS textures


0.8.12.3:

 + Added game playtime to control panel title
 + Added Synaptics touchpad mousewheel support for DirectInput/RawInput/HID
 + Added temporary file cleanup (i.e. SKI*.tmp, Version\*.old, ...) to DLL init.
 + Improved global injection startup/shutdown reliability
 + Fixed control panel window moving if its title changes
 + Fixed Fallout 4 / Scaleform exception handling
 + Fixed game_output.log being saved to the wrong location when using the
     global injector.
 + Fixed legacy keyboard input in Steam overlay in Skyrim: Special Edition
 + Fixed legacy mouse input after Alt+Tab in EverQuest
 + Switched framerate limiter over to new render backend system; WaitForVBLANK
     may not function correctly in some D3D9Ex games.

0.8.12.2:

 + Added a D3D9 ForceWindowed override to SpecialK.ini
 + Fixed SteamAPI exception handling in 32-bit ABI (Steam overlay callback)
 + Fixed double-input processing through PeekMessage
 + Fixed CEGUI / ImGui reset on multi-frame D3D9 device loss recovery

0.8.12.1:

 + Added 1.5 second delay unload for blacklisted applications to prevent performance
     problems when the CBT hook inevitably tries to re-inject the DLL.

0.8.12:

 + Removed legacy command console code (low-level keyboard hook, message pump)
 + Removed FreeLibrary hook, memory leaks in other software were being caught
     while debugging... it was obnoxious ;)
 + Fixed SteamAPI_Init being called instead of SteamAPI_Init_Detour
 + Fixed DirectDraw issues in Disgaea2 (presumably for video playback)
 + Fixed LoadLibraryW unhook during shutdown (had been unhooking LoadLibraryA)
 + Disabled relative mouse move in NieR: Automata - it always sends legacy input
 + Fixed problems dispatching keyboard input early from PeekMessage caused
     in Mass Effect: Andromeda
 + Added resolution warning to EULA screen
 + Fixed license text truncation on EULA screen
 + Added code to compensate for games that pull WM_KEYDOWN messages out of the
     pump by using PeekMessage* with PM_REMOVE set.
 + Enabled relative mouse motion from RawInput in any game that tries to capture
     mouse input non-cooperatively.
 + Added support for wrapping d3d8.dll, no native renderer exists or ever will,
     the project relies on optional third-party API wrappers for legacy APIs.
 + Optional dgVoodoo support added, place the (all 32-bit) DLLs in
     Documents\My Mods\Special K\PlugIns\ThirdParty\dgVoodoo\
 + Fixed-up floating-point exception handling in Prey

--------- (Initial GitLab Migration) ---------